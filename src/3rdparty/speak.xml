<?xml version="1.0"?>
<!DOCTYPE riscos-prm PUBLIC "-//Gerph//DTD PRM documentation 1.02//EN"
                            "http://gerph.org/dtd/102/prm.dtd">

<riscos-prm>
<chapter title="Speak module">
<section title="Introduction">
<p>
    Speak is a module by Jonathan Duddington which allows speech to be generated from text strings.
</p>

</section>



<section title="SWI calls">

<swi-definition name="Speak_Ready"
                number="4AD80"
                description="Check whether Speak is current speaking"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
</entry>
<exit>
 <register-use number="0">0 if still speaking, or -1 if not speaking.</register-use>
 <register-use number="1">Character index into the last string which is currently being spoken. The index refers to the start of the word which is currently being spoken.</register-use>
 <register-use number="2-5">0 (reserved for future expansion)</register-use>
</exit>

<use>
<p>Can be used to wait until the speak module has finished speaking, and to identify which word is currently being spoken.
</p>
</use>

<related>
    <reference type="swi" name="Speak_Say" />
</related>

</swi-definition>



<swi-definition name="Speak_Misc"
                number="4AD82"
                description="Miscellaneous functions"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0"><p>Reason code</p>
  <p>
    <value-table>
        <value number="0"><reference type='swi' name='Speak_Misc' reason="0" use-description="yes"/></value>
        <value number="1">Register user (obsolete)</value>
        <value number="2">Deregister user (obsolete)</value>
        <value number="3"><reference type='swi' name='Speak_Misc' reason="3" use-description="yes"/></value>
        <value number="4">Reload word dictionary (obsolete)</value>
        <value number="5"><reference type='swi' name='Speak_Misc' reason="5" use-description="yes"/></value>
        <value number="6"><reference type='swi' name='Speak_Misc' reason="6" use-description="yes"/></value>
        <value number="7">Initialise voice (obsolete)</value>
        <value number="8"><reference type='swi' name='Speak_Misc' reason="8" use-description="yes"/></value>
    </value-table>
  </p>
 </register-use>
</entry>
<exit>
 <register-use number="0-8">Dependant on reason code</register-use>
</exit>

<use>
<p>This SWI performs miscellaneous operations on the Speak module. See individual reason codes for more detail.</p>

<p>Unrecognised reason codes will always exit with R0 = 0 and R1 = 1.</p>
</use>

<related>
<!-- <reference type="vector" name="BingleV" /> -->
</related>

</swi-definition>


<swi-definition name="Speak_Misc"
                number="4AD82"
                reason="0"
                reasonname="Version"
                description="Return Speak version"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
</entry>
<exit>
 <register-use number="0">4 (API version)</register-use>
 <register-use number="1">347 (module version * 100)</register-use>
</exit>

<use>
<p>This SWI returns the version of the interface provided the the Speak module.</p>

<p>Up to version 3.30 of the module the version returned in R0 was 3, and R1 is preserved. After 3.30 the version returns in R0 is 4, and the module version is returned * 100 in R1.</p>
</use>

<related>
<!-- <reference type="vector" name="BingleV" /> -->
</related>

</swi-definition>


<swi-definition name="Speak_Misc"
                number="4AD82"
                reason="3"
                reasonname="TranslateToPhonemes"
                description="Translate text to phoneme string"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">3 (reason code)</register-use>
 <register-use number="1">Pointer to the string of a single English word to translate</register-use>
 <register-use number="2"><p>Translation type:</p>
  <p>
    <value-table>
        <value number="0">ASCII phonemes</value>
        <value number="1">IPA phonemes (as UTF-8)</value>
    </value-table>
  </p>
 </register-use>
</entry>
<exit>
 <register-use number="0">Pointer to zero-terminated phoeme string</register-use>
</exit>

<use>
<p>This SWI translates an English word into a string of phonemes.</p>
</use>

<related>
<!-- <reference type="vector" name="BingleV" /> -->
</related>

</swi-definition>


<swi-definition name="Speak_Misc"
                number="4AD82"
                reason="5"
                reasonname="ReadVoiceNames"
                description="Read voice names"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">5 (reason code)</register-use>
</entry>
<exit>
 <register-use number="0">Pointer to array of pointers to strings for the available voice names. The array is terminated by a 0.</register-use>
 <register-use number="1">Pointer to array of pointers to strings for the available voice variant names. The array is terminated by a 0.</register-use>
</exit>

<use>
<p>This SWI returns the list of known voice names and variants.</p>
<p>In version 3 of the API, R1 is always preserved.</p>
</use>

<related>
<!-- <reference type="vector" name="BingleV" /> -->
</related>

</swi-definition>


<swi-definition name="Speak_Misc"
                number="4AD82"
                reason="6"
                reasonname="SetVoiceByNumber"
                description="Select a voice by number"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">6 (reason code)</register-use>
 <register-use number="1">Index of the voice to select for speaking.</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI selects a voice by its index in the table of voices. If the index is out of range, the request is ignored.</p>
</use>

<related>
    <reference type="swi" name="Speak_Misc" reason="5"/>
    <reference type="swi" name="Speak_SetVoice"/>
</related>

</swi-definition>


<swi-definition name="Speak_Misc"
                number="4AD82"
                reason="8"
                reasonname="ReadVoiceParameters"
                description="Read voice parameters"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">8 (reason code)</register-use>
 <register-use number="1">Pointer to zero-terminated language name to read parameters, or 0 to return a list of all voices</register-use>
</entry>
<exit>
 <register-use number="0">Pointer to an array of pointers to voice parameters</register-use>
</exit>

<use>
<p>This SWI reads a list of voices which are available, and their parameters. The list of voices is returned as a pointer to an array of voice parameters. The list of voices will be filtered by the supplied language name. The language name should be a language and optional dialect, for example "en" or "en-uk".
</p>

<p>
    The voice parameters returned are in a voice structure:
</p>

<p>
    <offset-table>
        <offset number="0">Pointer to zero-terminated name of the voice</offset>
        <offset number="4">Pointer to a list of pairs of priority and language strings which this voice is appropriate for (see eSpeak documentation</offset>
        <offset number="8">Pointer to the filename of this voice</offset>
        <offset number="12"><p>(byte) Gender of the voice:</p>
            <value-table>
                <value number="0">No gender</value>
                <value number="1">Male</value>
                <value number="2">Female</value>
            </value-table>
        </offset>
        <offset number="13">(byte) Apparent age in years of the voice, or 0 if not specified</offset>
        <offset number="14">(byte) Reserved</offset>
        <offset number="15">(byte) Reserved</offset>
    </offset-table>
</p>

</use>

<related>
    <reference type="swi" name="Speak_Misc" reason="5"/>
    <reference type="swi" name="Speak_SetVoice"/>
</related>

</swi-definition>


<swi-definition name="Speak_Say"
                number="4AD83"
                description="Speak a string"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">Pointer to English text string to be spoken, terminated as described by R1</register-use>
 <register-use number="1">Length of the string pointed to by R0, or 0 if the string pointed to by R0 is terminated by a 0 or 13 byte</register-use>
 <register-use number="2">Voice index to use, or -1 for no change</register-use>
 <register-use number="3">Must be 0 (may be used in future versions)</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI is used to speak a text string with a given voice.
The voice to use can be selected from those returned by
<reference type='swi' name='Speak_Misc' reason='5' />.</p>
<p>
When speaking passages of text, this SWI should not
be called for each individual word, but rather for
sentences.  This allows the Speak module to apply an
intonation pattern to the whole clause.
</p>
<p>
The Speak module has to copy the text into an
internal buffer before speaking it.  This limits the
length the text string to 1000 characters.
</p>
<p>
This SWI will return immediately, before the text
has been spoken.  Use <reference type='swi' name='Speak_Ready'/> in a polling loop to
determine when the speaking has finished.
</p>
</use>

<related>
    <reference type="swi" name="Speak_SayW" />
    <reference type="swi" name="Speak_Ready" />
    <reference type="swi" name="Speak_SetVoice" />
</related>

</swi-definition>



<swi-definition name="Speak_SayW"
                number="4AD84"
                description="Speak a string and wait for completion"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">Pointer to English text string to be spoken, terminated as described by R1</register-use>
 <register-use number="1">Length of the string pointed to by R0, or 0 if the string pointed to by R0 is terminated by a 0 or 13 byte</register-use>
 <register-use number="2">Voice index to use, or -1 for no change</register-use>
 <register-use number="3">Must be 0 (may be used in future versions)</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI is the same as <reference type='swi' name='Speak_Say'/> but waits for the string to complete before returning.</p>

<p>In version 3 of this module, this SWI deoes not wait.</p>
</use>

<related>
    <reference type="swi" name="Speak_Say" />
</related>

</swi-definition>

<swi-definition name="Speak_Stop"
                number="4AD85"
                description="Stops any current speech"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
</entry>
<exit>
</exit>

<use>
<p>This SWI stops speaking any "Say" calls which have been sent to the Speak module.
</p>
</use>

<related>
    <reference type="swi" name="Speak_Say" />
    <reference type="swi" name="Speak_SayW" />
</related>

</swi-definition>



<swi-definition name="Speak_Pitch"
                number="4AD87"
                description="Set the pitch used by speech"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">new value of the 'pitch' parameter (0-255). Defaults to 128.</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI sets the pitch used by the Speak module. Out of range values for the pitch will be clipped to the limits.</p>
</use>

<related>
    <reference type="swi" name="Speak_Speed" />
    <reference type="swi" name="Speak_WordGap" />
</related>

</swi-definition>

<swi-definition name="Speak_Speed"
                number="4AD88"
                description="Set the speed of speech"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">new value of the 'speed' parameter (0-255). Defaults to 128.</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI sets the speed of speech generated by the Speak module.</p>
<p>This SWI may corrupt floating point registers on exit.</p>
</use>

<related>
    <reference type="swi" name="Speak_Pitch" />
    <reference type="swi" name="Speak_WordGap" />
</related>

</swi-definition>


<swi-definition name="Speak_WordGap"
                number="4AD89"
                description="Sets the gap between words in speech"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0"><p>New value of the 'word gap' parameter':</p>
 <p>
    <value-table>
        <value number="0">No extra gap between words</value>
        <value number="1">Ensure a short gap between each spoken word</value>
        <value number="&ge; 2">Larger gaps between words in multiples of 50ms</value>
        <value number="128">Equivalent to 0</value>
    </value-table>
 </p>
</register-use>

</entry>
<exit>
</exit>

<use>
<p>This SWI is used to change the gap applied between words of speech generated by the Speak module.</p>
</use>

<related>
    <reference type="swi" name="Speak_Speed" />
    <reference type="swi" name="Speak_Pitch" />
</related>

</swi-definition>



<swi-definition name="Speak_PitchRange"
                number="4AD8A"
                description="Change the range of pitches used by speech"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">new value of the 'pitch range' parameter. Default value is 128.</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI is used to control the 'pitch range' used by the Speak module.</p>
</use>

<related>
    <reference type="swi" name="Speak_Speed" />
    <reference type="swi" name="Speak_Pitch" />
    <reference type="swi" name="Speak_WordGap" />
</related>

</swi-definition>


<swi-definition name="Speak_Volume"
                number="4AD8D"
                description="Change the volume of speech"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">new volume (amplitude), range 0-255</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI is used to control the volume of the speech generated by the Speak module.</p>
<p>This SWI may corrupt floating point registers on exit.</p>
</use>

<related>
<!-- <reference type="vector" name="BingleV" /> -->
</related>

</swi-definition>


<swi-definition name="Speak_SetVoice"
                number="4AD8E"
                description="Select a voice by name"
                irqs="undefined"
                fiqs="enabled"
                processor-mode="SVC"
                re-entrant="no">

<entry>
 <register-use number="0">Pointer to a zero-terminated voice name to use.</register-use>
 <register-use number="1">Must be 0</register-use>
 <register-use number="2">Must be 0</register-use>
</entry>
<exit>
</exit>

<use>
<p>This SWI is used to select a voice by name. For example, "en-us" for the US English voice.</p>

<p>The voice name may be suffixed by a '+' followed by a voice variant name. For example, "en-us+f3+ to use the 'f3' female voice.</p>
</use>

<related>
    <reference type="swi" name="Speak_Say" />
    <reference type="swi" name="Speak_SayW" />
</related>

</swi-definition>
</section>


</chapter>

<!-- MetaData -->
<meta>
 <maintainer>
  <email name="Gerph" address="gerph@gerph.org" />
 </maintainer>
 <disclaimer>
    <p>
        &copy; Jonathan Duddington.
    </p>
 </disclaimer>

 <history>
  <revision number="1" author="Jonathan Duddington" date="12 Apr 2013" title="Release 1.47.06 of module">
    <change>Original documentation of eSpeak release 1.47.06</change>
  </revision>

  <revision number="2" author="Gerph" date="14 Jan 2021" title="PRM-in-XML conversion">
    <change>Converted to PRM-in-XML.</change>
  </revision>

  <revision number="2" author="Gerph" date="15 Jan 2021">
    <change>Updated SWI details with undocumented interfaces and more detail.</change>
  </revision>
 </history>

 <related>
    <reference type='link' href="http://espeak.sourceforge.net/" />
 </related>
</meta>
</riscos-prm>
